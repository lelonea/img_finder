version: "3.9"

services:
  db:
    image: postgres:16.2-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - 5433:${POSTGRES_PORT}
    env_file:
      - ./.env
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_NAME}", "-U", "${POSTGRES_USER}" ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
  web:
    build:
      dockerfile: Dockerfile
      context: .
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    command: [ "bash", "/app/entrypoint.sh" ]
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
  redis:
      restart: unless-stopped
      image: redis:7.2-alpine
      ports:
        - '6379:6379'
      healthcheck:
        test: ["CMD", "redis-cli", "ping"]
        interval: 30s
        timeout: 60s
        retries: 3
  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: [ "bash", "/app/run_celery.sh" ]
    volumes:
      - .:/app
    depends_on:
      redis:
        condition: service_healthy
  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: [ "celery", "-A", "img_finder", "beat", "--loglevel=INFO" ]
    volumes:
      - .:/app
    depends_on:
      - celery
      - redis


volumes:
  postgres_data: